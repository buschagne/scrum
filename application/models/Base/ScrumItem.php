<?php
// Connection Component Binding
Doctrine_Manager::getInstance()->bindComponent('ScrumItem', 'scrum');

/**
 * Base_ScrumItem
 * 
 * This class has been auto-generated by the Doctrine ORM Framework
 * 
 * @property integer $id_scrum_item
 * @property string $label
 * @property string $description
 * @property timestamp $created_on
 * @property timestamp $removed_on
 * @property Doctrine_Collection $Play
 * 
 * @package    ##PACKAGE##
 * @subpackage ##SUBPACKAGE##
 * @author     ##NAME## <##EMAIL##>
 * @version    SVN: $Id: Builder.php 7490 2010-03-29 19:53:27Z jwage $
 */
abstract class Base_ScrumItem extends Doctrine_Record
{
    public function setTableDefinition()
    {
        $this->setTableName('scrum_item');
        $this->hasColumn('id_scrum_item', 'integer', 4, array(
             'type' => 'integer',
             'length' => 4,
             'fixed' => false,
             'unsigned' => false,
             'primary' => true,
             'autoincrement' => true,
             ));
        $this->hasColumn('label', 'string', 255, array(
             'type' => 'string',
             'length' => 255,
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('description', 'string', null, array(
             'type' => 'string',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('created_on', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => true,
             'autoincrement' => false,
             ));
        $this->hasColumn('removed_on', 'timestamp', null, array(
             'type' => 'timestamp',
             'fixed' => false,
             'unsigned' => false,
             'primary' => false,
             'notnull' => false,
             'autoincrement' => false,
             ));
    }

    public function setUp()
    {
        parent::setUp();
        $this->hasMany('Play', array(
             'local' => 'id_scrum_item',
             'foreign' => 'fk_id_scrum_item'));
    }
}